#include <iostream>
using namespace std;
int arr[30],size;
int l,r,max1;
void max_heapify(int arr[],int ele,int size)
{   
    l=2*ele;
    r=2*ele+1;
    max1=ele;
    if(l<size&&arr[ele]<arr[l])
    {
        max1=l;
    }
    if(r<size&&arr[max1]<arr[r])
    {
        max1=r;
    }
    if(max1!=ele)
    {
        swap(arr[max1],arr[ele]);
        max_heapify(arr,max1,size);
    }
}
int main()
{   int size,ele;
    cout<<"Enter size of priority queue"<<endl;
    cin>>size;
    arr[size];
    for(int i=1;i<=size;i++)
    {
        cout<<"Enter elements of priority queue"<<endl;
        cin>>arr[i];
    }
    cout<<"Enter index you want to apply max heapify"<<endl;
    cin>>ele;
    cout<<"Applying max heapify on element "<<arr[ele]<<endl;
    max_heapify(arr,ele,size);
    cout<<"Priority queue after apply max heapify: "<<endl;
    for(int i=1;i<=size;i++)
    {
        cout<<arr[i]<<" ";
    }
    return 0;
}
